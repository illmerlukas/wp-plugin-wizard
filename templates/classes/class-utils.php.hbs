<?php
/**
 * File for utility functions.
 *
 * @package     {{packageName pluginSlug}}
 */

namespace {{namespace pluginSlug}};

/**
 * Utils class for common functions.
 */
class Utils {

	/**
	 * Get available versions based on the folders.
	 *
	 * @access public
	 * @return array The available versions.
	 */
	public function get_available_versions(): array {
		$directories = $this->glob( {{constantCase pluginSlug}}_PLUGIN_DIR . 'classes/Rest/Endpoints/V*', GLOB_ONLYDIR );
		$versions    = array_map( 'basename', $directories );

		return $versions;
	}

	/**
	 * Wrapper for the glob function to allow mocking in tests.
	 *
	 * @access protected
	 * @param string $pattern The pattern.
	 * @param mixed  $flags The flags.
	 * @return array
	 */
	protected function glob( string $pattern, $flags = 0 ): array {
		return glob( $pattern, $flags ) ?? array();
	}

	/**
	 * Convert file name to class name.
	 *
	 * @access public
	 * @param string $file_name The file name to convert.
	 * @return string The converted class name.
	 */
	public function convert_file_name_to_class_name( string $file_name ): string {
		// Remove 'class-' prefix and convert to CamelCase.
		$class_name = str_replace( ' ', '_', ucwords( str_replace( '-', ' ', str_replace( 'class-', '', $file_name ) ) ) );
		return $class_name;
	}

	/**
	 * Log a message to bugsnag.
	 *
	 * @access public
	 * @param string $message The message to log.
	 * @param mixed  $meta The meta data to log.
	 * @param string $severity The severity of the message.
	 */
	public static function do_log( $message, $meta = null, $severity = null ): void {
		$severity = empty( $severity ) ? 'info' : $severity;

		do_action( 'nnp_log_message', '{{properCase pluginSlug}}', $message, $meta, $severity );
	}
}
